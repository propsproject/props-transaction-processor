/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var payload_pb = require('./payload_pb.js');
goog.object.extend(proto, payload_pb);
var balance_pb = require('./balance_pb.js');
goog.object.extend(proto, balance_pb);
var users_pb = require('./users_pb.js');
goog.object.extend(proto, users_pb);
var transaction_pb = require('./transaction_pb.js');
goog.object.extend(proto, transaction_pb);
var reward_entities_pb = require('./reward_entities_pb.js');
goog.object.extend(proto, reward_entities_pb);
goog.exportSymbol('proto.pending_props_pb.BalanceEvent', null, global);
goog.exportSymbol('proto.pending_props_pb.EventType', null, global);
goog.exportSymbol('proto.pending_props_pb.LastEthBlockEvent', null, global);
goog.exportSymbol('proto.pending_props_pb.RewardEntityUpdateEvent', null, global);
goog.exportSymbol('proto.pending_props_pb.TransactionEvent', null, global);
goog.exportSymbol('proto.pending_props_pb.WalletLinkedEvent', null, global);
goog.exportSymbol('proto.pending_props_pb.WalletUnlinkedEvent', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pending_props_pb.TransactionEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pending_props_pb.TransactionEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pending_props_pb.TransactionEvent.displayName = 'proto.pending_props_pb.TransactionEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pending_props_pb.BalanceEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pending_props_pb.BalanceEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pending_props_pb.BalanceEvent.displayName = 'proto.pending_props_pb.BalanceEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pending_props_pb.LastEthBlockEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pending_props_pb.LastEthBlockEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pending_props_pb.LastEthBlockEvent.displayName = 'proto.pending_props_pb.LastEthBlockEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pending_props_pb.WalletLinkedEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pending_props_pb.WalletLinkedEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pending_props_pb.WalletLinkedEvent.displayName = 'proto.pending_props_pb.WalletLinkedEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pending_props_pb.WalletUnlinkedEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pending_props_pb.WalletUnlinkedEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pending_props_pb.WalletUnlinkedEvent.displayName = 'proto.pending_props_pb.WalletUnlinkedEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pending_props_pb.RewardEntityUpdateEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pending_props_pb.RewardEntityUpdateEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pending_props_pb.RewardEntityUpdateEvent.displayName = 'proto.pending_props_pb.RewardEntityUpdateEvent';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pending_props_pb.TransactionEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.pending_props_pb.TransactionEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pending_props_pb.TransactionEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pending_props_pb.TransactionEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    transaction: (f = msg.getTransaction()) && transaction_pb.Transaction.toObject(includeInstance, f),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0),
    stateaddress: jspb.Message.getFieldWithDefault(msg, 3, ""),
    message: jspb.Message.getFieldWithDefault(msg, 4, ""),
    description: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pending_props_pb.TransactionEvent}
 */
proto.pending_props_pb.TransactionEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pending_props_pb.TransactionEvent;
  return proto.pending_props_pb.TransactionEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pending_props_pb.TransactionEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pending_props_pb.TransactionEvent}
 */
proto.pending_props_pb.TransactionEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new transaction_pb.Transaction;
      reader.readMessage(value,transaction_pb.Transaction.deserializeBinaryFromReader);
      msg.setTransaction(value);
      break;
    case 2:
      var value = /** @type {!proto.pending_props_pb.Method} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setStateaddress(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pending_props_pb.TransactionEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pending_props_pb.TransactionEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pending_props_pb.TransactionEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pending_props_pb.TransactionEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransaction();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      transaction_pb.Transaction.serializeBinaryToWriter
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getStateaddress();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional Transaction transaction = 1;
 * @return {?proto.pending_props_pb.Transaction}
 */
proto.pending_props_pb.TransactionEvent.prototype.getTransaction = function() {
  return /** @type{?proto.pending_props_pb.Transaction} */ (
    jspb.Message.getWrapperField(this, transaction_pb.Transaction, 1));
};


/** @param {?proto.pending_props_pb.Transaction|undefined} value */
proto.pending_props_pb.TransactionEvent.prototype.setTransaction = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.pending_props_pb.TransactionEvent.prototype.clearTransaction = function() {
  this.setTransaction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pending_props_pb.TransactionEvent.prototype.hasTransaction = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Method type = 2;
 * @return {!proto.pending_props_pb.Method}
 */
proto.pending_props_pb.TransactionEvent.prototype.getType = function() {
  return /** @type {!proto.pending_props_pb.Method} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.pending_props_pb.Method} value */
proto.pending_props_pb.TransactionEvent.prototype.setType = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string stateAddress = 3;
 * @return {string}
 */
proto.pending_props_pb.TransactionEvent.prototype.getStateaddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.pending_props_pb.TransactionEvent.prototype.setStateaddress = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string message = 4;
 * @return {string}
 */
proto.pending_props_pb.TransactionEvent.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.pending_props_pb.TransactionEvent.prototype.setMessage = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string description = 5;
 * @return {string}
 */
proto.pending_props_pb.TransactionEvent.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.pending_props_pb.TransactionEvent.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pending_props_pb.BalanceEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.pending_props_pb.BalanceEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pending_props_pb.BalanceEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pending_props_pb.BalanceEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    balance: (f = msg.getBalance()) && balance_pb.Balance.toObject(includeInstance, f),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pending_props_pb.BalanceEvent}
 */
proto.pending_props_pb.BalanceEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pending_props_pb.BalanceEvent;
  return proto.pending_props_pb.BalanceEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pending_props_pb.BalanceEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pending_props_pb.BalanceEvent}
 */
proto.pending_props_pb.BalanceEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new balance_pb.Balance;
      reader.readMessage(value,balance_pb.Balance.deserializeBinaryFromReader);
      msg.setBalance(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pending_props_pb.BalanceEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pending_props_pb.BalanceEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pending_props_pb.BalanceEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pending_props_pb.BalanceEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBalance();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      balance_pb.Balance.serializeBinaryToWriter
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional Balance balance = 1;
 * @return {?proto.pending_props_pb.Balance}
 */
proto.pending_props_pb.BalanceEvent.prototype.getBalance = function() {
  return /** @type{?proto.pending_props_pb.Balance} */ (
    jspb.Message.getWrapperField(this, balance_pb.Balance, 1));
};


/** @param {?proto.pending_props_pb.Balance|undefined} value */
proto.pending_props_pb.BalanceEvent.prototype.setBalance = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.pending_props_pb.BalanceEvent.prototype.clearBalance = function() {
  this.setBalance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pending_props_pb.BalanceEvent.prototype.hasBalance = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.pending_props_pb.BalanceEvent.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.pending_props_pb.BalanceEvent.prototype.setMessage = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.pending_props_pb.BalanceEvent.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.pending_props_pb.BalanceEvent.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pending_props_pb.LastEthBlockEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.pending_props_pb.LastEthBlockEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pending_props_pb.LastEthBlockEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pending_props_pb.LastEthBlockEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    blockid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    timestamp: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pending_props_pb.LastEthBlockEvent}
 */
proto.pending_props_pb.LastEthBlockEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pending_props_pb.LastEthBlockEvent;
  return proto.pending_props_pb.LastEthBlockEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pending_props_pb.LastEthBlockEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pending_props_pb.LastEthBlockEvent}
 */
proto.pending_props_pb.LastEthBlockEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBlockid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pending_props_pb.LastEthBlockEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pending_props_pb.LastEthBlockEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pending_props_pb.LastEthBlockEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pending_props_pb.LastEthBlockEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBlockid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional int64 blockId = 1;
 * @return {number}
 */
proto.pending_props_pb.LastEthBlockEvent.prototype.getBlockid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.pending_props_pb.LastEthBlockEvent.prototype.setBlockid = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.pending_props_pb.LastEthBlockEvent.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.pending_props_pb.LastEthBlockEvent.prototype.setMessage = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 timestamp = 3;
 * @return {number}
 */
proto.pending_props_pb.LastEthBlockEvent.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.pending_props_pb.LastEthBlockEvent.prototype.setTimestamp = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pending_props_pb.WalletLinkedEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.pending_props_pb.WalletLinkedEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pending_props_pb.WalletLinkedEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pending_props_pb.WalletLinkedEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    user: (f = msg.getUser()) && users_pb.ApplicationUser.toObject(includeInstance, f),
    wallettousers: (f = msg.getWallettousers()) && users_pb.WalletToUser.toObject(includeInstance, f),
    message: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pending_props_pb.WalletLinkedEvent}
 */
proto.pending_props_pb.WalletLinkedEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pending_props_pb.WalletLinkedEvent;
  return proto.pending_props_pb.WalletLinkedEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pending_props_pb.WalletLinkedEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pending_props_pb.WalletLinkedEvent}
 */
proto.pending_props_pb.WalletLinkedEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new users_pb.ApplicationUser;
      reader.readMessage(value,users_pb.ApplicationUser.deserializeBinaryFromReader);
      msg.setUser(value);
      break;
    case 2:
      var value = new users_pb.WalletToUser;
      reader.readMessage(value,users_pb.WalletToUser.deserializeBinaryFromReader);
      msg.setWallettousers(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pending_props_pb.WalletLinkedEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pending_props_pb.WalletLinkedEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pending_props_pb.WalletLinkedEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pending_props_pb.WalletLinkedEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      users_pb.ApplicationUser.serializeBinaryToWriter
    );
  }
  f = message.getWallettousers();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      users_pb.WalletToUser.serializeBinaryToWriter
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional ApplicationUser user = 1;
 * @return {?proto.pending_props_pb.ApplicationUser}
 */
proto.pending_props_pb.WalletLinkedEvent.prototype.getUser = function() {
  return /** @type{?proto.pending_props_pb.ApplicationUser} */ (
    jspb.Message.getWrapperField(this, users_pb.ApplicationUser, 1));
};


/** @param {?proto.pending_props_pb.ApplicationUser|undefined} value */
proto.pending_props_pb.WalletLinkedEvent.prototype.setUser = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.pending_props_pb.WalletLinkedEvent.prototype.clearUser = function() {
  this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pending_props_pb.WalletLinkedEvent.prototype.hasUser = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional WalletToUser walletToUsers = 2;
 * @return {?proto.pending_props_pb.WalletToUser}
 */
proto.pending_props_pb.WalletLinkedEvent.prototype.getWallettousers = function() {
  return /** @type{?proto.pending_props_pb.WalletToUser} */ (
    jspb.Message.getWrapperField(this, users_pb.WalletToUser, 2));
};


/** @param {?proto.pending_props_pb.WalletToUser|undefined} value */
proto.pending_props_pb.WalletLinkedEvent.prototype.setWallettousers = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.pending_props_pb.WalletLinkedEvent.prototype.clearWallettousers = function() {
  this.setWallettousers(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pending_props_pb.WalletLinkedEvent.prototype.hasWallettousers = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string message = 3;
 * @return {string}
 */
proto.pending_props_pb.WalletLinkedEvent.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.pending_props_pb.WalletLinkedEvent.prototype.setMessage = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pending_props_pb.WalletUnlinkedEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.pending_props_pb.WalletUnlinkedEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pending_props_pb.WalletUnlinkedEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pending_props_pb.WalletUnlinkedEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    user: (f = msg.getUser()) && users_pb.ApplicationUser.toObject(includeInstance, f),
    wallettousers: (f = msg.getWallettousers()) && users_pb.WalletToUser.toObject(includeInstance, f),
    message: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pending_props_pb.WalletUnlinkedEvent}
 */
proto.pending_props_pb.WalletUnlinkedEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pending_props_pb.WalletUnlinkedEvent;
  return proto.pending_props_pb.WalletUnlinkedEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pending_props_pb.WalletUnlinkedEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pending_props_pb.WalletUnlinkedEvent}
 */
proto.pending_props_pb.WalletUnlinkedEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new users_pb.ApplicationUser;
      reader.readMessage(value,users_pb.ApplicationUser.deserializeBinaryFromReader);
      msg.setUser(value);
      break;
    case 2:
      var value = new users_pb.WalletToUser;
      reader.readMessage(value,users_pb.WalletToUser.deserializeBinaryFromReader);
      msg.setWallettousers(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pending_props_pb.WalletUnlinkedEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pending_props_pb.WalletUnlinkedEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pending_props_pb.WalletUnlinkedEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pending_props_pb.WalletUnlinkedEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      users_pb.ApplicationUser.serializeBinaryToWriter
    );
  }
  f = message.getWallettousers();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      users_pb.WalletToUser.serializeBinaryToWriter
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional ApplicationUser user = 1;
 * @return {?proto.pending_props_pb.ApplicationUser}
 */
proto.pending_props_pb.WalletUnlinkedEvent.prototype.getUser = function() {
  return /** @type{?proto.pending_props_pb.ApplicationUser} */ (
    jspb.Message.getWrapperField(this, users_pb.ApplicationUser, 1));
};


/** @param {?proto.pending_props_pb.ApplicationUser|undefined} value */
proto.pending_props_pb.WalletUnlinkedEvent.prototype.setUser = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.pending_props_pb.WalletUnlinkedEvent.prototype.clearUser = function() {
  this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pending_props_pb.WalletUnlinkedEvent.prototype.hasUser = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional WalletToUser walletToUsers = 2;
 * @return {?proto.pending_props_pb.WalletToUser}
 */
proto.pending_props_pb.WalletUnlinkedEvent.prototype.getWallettousers = function() {
  return /** @type{?proto.pending_props_pb.WalletToUser} */ (
    jspb.Message.getWrapperField(this, users_pb.WalletToUser, 2));
};


/** @param {?proto.pending_props_pb.WalletToUser|undefined} value */
proto.pending_props_pb.WalletUnlinkedEvent.prototype.setWallettousers = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.pending_props_pb.WalletUnlinkedEvent.prototype.clearWallettousers = function() {
  this.setWallettousers(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pending_props_pb.WalletUnlinkedEvent.prototype.hasWallettousers = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string message = 3;
 * @return {string}
 */
proto.pending_props_pb.WalletUnlinkedEvent.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.pending_props_pb.WalletUnlinkedEvent.prototype.setMessage = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pending_props_pb.RewardEntityUpdateEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.pending_props_pb.RewardEntityUpdateEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pending_props_pb.RewardEntityUpdateEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pending_props_pb.RewardEntityUpdateEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    entity: (f = msg.getEntity()) && reward_entities_pb.RewardEntity.toObject(includeInstance, f),
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pending_props_pb.RewardEntityUpdateEvent}
 */
proto.pending_props_pb.RewardEntityUpdateEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pending_props_pb.RewardEntityUpdateEvent;
  return proto.pending_props_pb.RewardEntityUpdateEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pending_props_pb.RewardEntityUpdateEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pending_props_pb.RewardEntityUpdateEvent}
 */
proto.pending_props_pb.RewardEntityUpdateEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new reward_entities_pb.RewardEntity;
      reader.readMessage(value,reward_entities_pb.RewardEntity.deserializeBinaryFromReader);
      msg.setEntity(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pending_props_pb.RewardEntityUpdateEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pending_props_pb.RewardEntityUpdateEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pending_props_pb.RewardEntityUpdateEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pending_props_pb.RewardEntityUpdateEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntity();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      reward_entities_pb.RewardEntity.serializeBinaryToWriter
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional RewardEntity entity = 1;
 * @return {?proto.pending_props_pb.RewardEntity}
 */
proto.pending_props_pb.RewardEntityUpdateEvent.prototype.getEntity = function() {
  return /** @type{?proto.pending_props_pb.RewardEntity} */ (
    jspb.Message.getWrapperField(this, reward_entities_pb.RewardEntity, 1));
};


/** @param {?proto.pending_props_pb.RewardEntity|undefined} value */
proto.pending_props_pb.RewardEntityUpdateEvent.prototype.setEntity = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.pending_props_pb.RewardEntityUpdateEvent.prototype.clearEntity = function() {
  this.setEntity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pending_props_pb.RewardEntityUpdateEvent.prototype.hasEntity = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.pending_props_pb.RewardEntityUpdateEvent.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.pending_props_pb.RewardEntityUpdateEvent.prototype.setMessage = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * @enum {number}
 */
proto.pending_props_pb.EventType = {
  EARNINGISSUED: 0,
  EARNINGREVOKED: 1,
  EARNINGSETTLED: 2,
  BALANCEUPDATED: 3,
  LASTETHBLOCKUPDATED: 4,
  WALLETLINKED: 5,
  WALLETUNLINKED: 6,
  TRANSACTIONADDED: 7,
  REWARDENTITYUPDATED: 8
};

goog.object.extend(exports, proto.pending_props_pb);
