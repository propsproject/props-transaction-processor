// Code generated by protoc-gen-go. DO NOT EDIT.
// source: payload.proto

package pending_props_pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/any"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Method int32

const (
	Method_ISSUE                 Method = 0
	Method_REVOKE                Method = 1
	Method_SETTLE                Method = 2
	Method_BALANCE_UPDATE        Method = 3
	Method_LAST_ETH_BLOCK_UPDATE Method = 4
	Method_WALLET_LINK           Method = 5
	Method_ACTIVITY_LOG          Method = 6
)

var Method_name = map[int32]string{
	0: "ISSUE",
	1: "REVOKE",
	2: "SETTLE",
	3: "BALANCE_UPDATE",
	4: "LAST_ETH_BLOCK_UPDATE",
	5: "WALLET_LINK",
	6: "ACTIVITY_LOG",
}
var Method_value = map[string]int32{
	"ISSUE":                 0,
	"REVOKE":                1,
	"SETTLE":                2,
	"BALANCE_UPDATE":        3,
	"LAST_ETH_BLOCK_UPDATE": 4,
	"WALLET_LINK":           5,
	"ACTIVITY_LOG":          6,
}

func (x Method) String() string {
	return proto.EnumName(Method_name, int32(x))
}
func (Method) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

type Params struct {
	Data *google_protobuf.Any `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
}

func (m *Params) Reset()                    { *m = Params{} }
func (m *Params) String() string            { return proto.CompactTextString(m) }
func (*Params) ProtoMessage()               {}
func (*Params) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *Params) GetData() *google_protobuf.Any {
	if m != nil {
		return m.Data
	}
	return nil
}

// @Todo add nonce
type RPCRequest struct {
	Method Method  `protobuf:"varint,1,opt,name=method,enum=pending_props_pb.Method" json:"method,omitempty"`
	Params *Params `protobuf:"bytes,2,opt,name=params" json:"params,omitempty"`
}

func (m *RPCRequest) Reset()                    { *m = RPCRequest{} }
func (m *RPCRequest) String() string            { return proto.CompactTextString(m) }
func (*RPCRequest) ProtoMessage()               {}
func (*RPCRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *RPCRequest) GetMethod() Method {
	if m != nil {
		return m.Method
	}
	return Method_ISSUE
}

func (m *RPCRequest) GetParams() *Params {
	if m != nil {
		return m.Params
	}
	return nil
}

// Data to be submitted to TP
type BalanceUpdate struct {
	PublicAddress  string `protobuf:"bytes,1,opt,name=public_address,json=publicAddress" json:"public_address,omitempty"`
	OnchainBalance string `protobuf:"bytes,2,opt,name=onchain_balance,json=onchainBalance" json:"onchain_balance,omitempty"`
	TxHash         string `protobuf:"bytes,5,opt,name=tx_hash,json=txHash" json:"tx_hash,omitempty"`
	BlockId        int64  `protobuf:"varint,6,opt,name=block_id,json=blockId" json:"block_id,omitempty"`
	Timestamp      int64  `protobuf:"varint,7,opt,name=timestamp" json:"timestamp,omitempty"`
}

func (m *BalanceUpdate) Reset()                    { *m = BalanceUpdate{} }
func (m *BalanceUpdate) String() string            { return proto.CompactTextString(m) }
func (*BalanceUpdate) ProtoMessage()               {}
func (*BalanceUpdate) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *BalanceUpdate) GetPublicAddress() string {
	if m != nil {
		return m.PublicAddress
	}
	return ""
}

func (m *BalanceUpdate) GetOnchainBalance() string {
	if m != nil {
		return m.OnchainBalance
	}
	return ""
}

func (m *BalanceUpdate) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

func (m *BalanceUpdate) GetBlockId() int64 {
	if m != nil {
		return m.BlockId
	}
	return 0
}

func (m *BalanceUpdate) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type LastEthBlock struct {
	Id        int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Timestamp int64 `protobuf:"varint,2,opt,name=timestamp" json:"timestamp,omitempty"`
}

func (m *LastEthBlock) Reset()                    { *m = LastEthBlock{} }
func (m *LastEthBlock) String() string            { return proto.CompactTextString(m) }
func (*LastEthBlock) ProtoMessage()               {}
func (*LastEthBlock) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *LastEthBlock) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *LastEthBlock) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func init() {
	proto.RegisterType((*Params)(nil), "pending_props_pb.Params")
	proto.RegisterType((*RPCRequest)(nil), "pending_props_pb.RPCRequest")
	proto.RegisterType((*BalanceUpdate)(nil), "pending_props_pb.BalanceUpdate")
	proto.RegisterType((*LastEthBlock)(nil), "pending_props_pb.LastEthBlock")
	proto.RegisterEnum("pending_props_pb.Method", Method_name, Method_value)
}

func init() { proto.RegisterFile("payload.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 421 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0xc1, 0x8f, 0x12, 0x31,
	0x18, 0xc5, 0x65, 0x58, 0x06, 0xf9, 0x76, 0x99, 0x9d, 0x34, 0x1a, 0x07, 0xe3, 0x61, 0x43, 0x62,
	0x24, 0x1e, 0x66, 0x0d, 0x5e, 0xbd, 0x0c, 0xd8, 0xb8, 0x13, 0xea, 0x42, 0xca, 0xb0, 0xc6, 0x53,
	0xd3, 0xa1, 0x95, 0x99, 0x38, 0x4c, 0x2b, 0x2d, 0xc9, 0x72, 0xf0, 0x8f, 0xf2, 0x3f, 0x34, 0x74,
	0xd8, 0x98, 0x10, 0x6f, 0xed, 0x7b, 0xef, 0xd7, 0xd7, 0x7c, 0x1f, 0xf4, 0x35, 0x3f, 0x54, 0x8a,
	0x8b, 0x58, 0xef, 0x94, 0x55, 0x28, 0xd4, 0xb2, 0x16, 0x65, 0xbd, 0x61, 0x7a, 0xa7, 0xb4, 0x61,
	0x3a, 0x7f, 0x3d, 0xd8, 0x28, 0xb5, 0xa9, 0xe4, 0xad, 0xf3, 0xf3, 0xfd, 0x8f, 0x5b, 0x5e, 0x1f,
	0x9a, 0xf0, 0x70, 0x0c, 0xfe, 0x82, 0xef, 0xf8, 0xd6, 0xa0, 0x11, 0x5c, 0x08, 0x6e, 0x79, 0xd4,
	0xba, 0x69, 0x8d, 0x2e, 0xc7, 0x2f, 0xe2, 0x86, 0x89, 0x9f, 0x98, 0x38, 0xa9, 0x0f, 0xd4, 0x25,
	0x86, 0x1a, 0x80, 0x2e, 0xa6, 0x54, 0xfe, 0xda, 0x4b, 0x63, 0xd1, 0x07, 0xf0, 0xb7, 0xd2, 0x16,
	0x4a, 0x38, 0x32, 0x18, 0x47, 0xf1, 0x79, 0x7f, 0xfc, 0xd5, 0xf9, 0xf4, 0x94, 0x3b, 0x12, 0xda,
	0x75, 0x46, 0x9e, 0xeb, 0xfa, 0x0f, 0xd1, 0xfc, 0x89, 0x9e, 0x72, 0xc3, 0x3f, 0x2d, 0xe8, 0x4f,
	0x78, 0xc5, 0xeb, 0xb5, 0x5c, 0x69, 0xc1, 0xad, 0x44, 0x6f, 0x21, 0xd0, 0xfb, 0xbc, 0x2a, 0xd7,
	0x8c, 0x0b, 0xb1, 0x93, 0xc6, 0xb8, 0xf6, 0x1e, 0xed, 0x37, 0x6a, 0xd2, 0x88, 0xe8, 0x1d, 0x5c,
	0xab, 0x7a, 0x5d, 0xf0, 0xb2, 0x66, 0x79, 0xc3, 0xbb, 0xce, 0x1e, 0x0d, 0x4e, 0xf2, 0xe9, 0x55,
	0xf4, 0x0a, 0xba, 0xf6, 0x91, 0x15, 0xdc, 0x14, 0x51, 0xc7, 0x05, 0x7c, 0xfb, 0x78, 0xc7, 0x4d,
	0x81, 0x06, 0xf0, 0x3c, 0xaf, 0xd4, 0xfa, 0x27, 0x2b, 0x45, 0xe4, 0xdf, 0xb4, 0x46, 0x6d, 0xda,
	0x75, 0xf7, 0x54, 0xa0, 0x37, 0xd0, 0xb3, 0xe5, 0x56, 0x1a, 0xcb, 0xb7, 0x3a, 0xea, 0x3a, 0xef,
	0x9f, 0x30, 0xfc, 0x04, 0x57, 0x84, 0x1b, 0x8b, 0x6d, 0x31, 0x39, 0xe6, 0x51, 0x00, 0x5e, 0xd9,
	0xcc, 0xa8, 0x4d, 0xbd, 0xf2, 0x8c, 0xf6, 0xce, 0xe8, 0xf7, 0xbf, 0xc1, 0x6f, 0xa6, 0x86, 0x7a,
	0xd0, 0x49, 0x97, 0xcb, 0x15, 0x0e, 0x9f, 0x21, 0x00, 0x9f, 0xe2, 0x87, 0xf9, 0x0c, 0x87, 0xad,
	0xe3, 0x79, 0x89, 0xb3, 0x8c, 0xe0, 0xd0, 0x43, 0x08, 0x82, 0x49, 0x42, 0x92, 0xfb, 0x29, 0x66,
	0xab, 0xc5, 0xe7, 0x24, 0xc3, 0x61, 0x1b, 0x0d, 0xe0, 0x25, 0x49, 0x96, 0x19, 0xc3, 0xd9, 0x1d,
	0x9b, 0x90, 0xf9, 0x74, 0xf6, 0x64, 0x5d, 0xa0, 0x6b, 0xb8, 0xfc, 0x96, 0x10, 0x82, 0x33, 0x46,
	0xd2, 0xfb, 0x59, 0xd8, 0x41, 0x21, 0x5c, 0x25, 0xd3, 0x2c, 0x7d, 0x48, 0xb3, 0xef, 0x8c, 0xcc,
	0xbf, 0x84, 0x7e, 0xee, 0xbb, 0xb5, 0x7f, 0xfc, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x36, 0x44, 0x46,
	0xb3, 0x5b, 0x02, 0x00, 0x00,
}
